defmodule ChanneledBeats.Repo.Migrations.AddChannelsAndBeats do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:channels, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :extension, :text, null: false
      add :beat_id, :uuid
    end

    create table(:beats, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
    end

    alter table(:channels) do
      modify :beat_id,
             references(:beats,
               column: :id,
               name: "channels_beat_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:beats) do
      add :name, :text, null: false
      add :remix_of_nolink, :text

      add :artist_id,
          references(:users,
            column: :id,
            name: "beats_artist_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :remix_of_id,
          references(:beats,
            column: :id,
            name: "beats_remix_of_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:beats, "beats_artist_id_fkey")

    drop constraint(:beats, "beats_remix_of_id_fkey")

    alter table(:beats) do
      remove :remix_of_id
      remove :artist_id
      remove :remix_of_nolink
      remove :name
    end

    drop constraint(:channels, "channels_beat_id_fkey")

    alter table(:channels) do
      modify :beat_id, :uuid
    end

    drop table(:beats)

    drop table(:channels)
  end
end